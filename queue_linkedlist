class QueueLinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def is_empty(self):
        return self.head is None

    def enqueue(self, item):
        new_node = Node(item)
        if self.is_empty():
            self.head = self.tail = new_node
        else:
            self.tail.next = new_node
            self.tail = new_node

    def dequeue(self):
        if self.is_empty():
            return None  # Handle empty queue
        dequeued = self.head.data
        self.head = self.head.next
        if self.head is None:  # Queue became empty
            self.tail = None
        return dequeued

    def peek(self):
        if self.is_empty():
            return None  # Handle empty queue
        return self.head.data

    def size(self):
        count = 0
        current = self.head
        while current:
            count += 1
            current = current.next
        return count
